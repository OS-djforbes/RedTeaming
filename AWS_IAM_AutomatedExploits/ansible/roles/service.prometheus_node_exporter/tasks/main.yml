---
- name: Create {{ volume_mount }} directories.
  file:
    path: "{{ item }}"
    state: directory
    owner: "1000"
  with_items:
    - "{{ volume_mount }}/prometheus_node_exporter/textfile_collector"

- name: Download Prometheus node exporter binary.
  get_url:
    url: https://github.com/prometheus/node_exporter/releases/download/v{{ prometheus_node_exporter_version }}/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64.tar.gz
    dest: "/root/node_exporter-{{ prometheus_node_exporter_version }}.tar.gz"

- name: Untar the Prometheus node exporter binary.
  shell: >
    tar -xzvf node_exporter-{{ prometheus_node_exporter_version }}.tar.gz
  args:
    chdir: /root
    creates: /root/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64/node_exporter

- name: Stat the "old" file before copying it in place.
  stat:
    path: /usr/local/sbin/prometheus_node_exporter
  register: old_file

- name: Copy the binary to /usr/local/sbin.
  copy:
    src: /root/node_exporter-{{ prometheus_node_exporter_version }}.linux-amd64/node_exporter
    dest: /usr/local/sbin/prometheus_node_exporter
    owner: root
    group: root
    mode: 0700
    remote_src: yes

- name: Stat the NEW file.
  stat:
    path: /usr/local/sbin/prometheus_node_exporter
  register: new_file

- name: Debug the checksums.
  debug:
    msg: |
      old - {{ old_file.stat.checksum }}
      new - {{ new_file.stat.checksum }}
  when: old_file.stat.exists

- name: Template the Prometheus node exporter service.
  template:
    src: prometheus_node_exporter.service.j2
    dest: /etc/systemd/system/prometheus_node_exporter.service

- name: Reload systemd.
  command: systemctl daemon-reload
  changed_when: false

- name: Restart Prometheus when 'restart_prometheus_node_exporter' is defined or the binary has changed.
  service:
    name: prometheus_node_exporter
    state: restarted
    enabled: yes
  when: restart_prometheus_node_exporter is defined or ( old_file.stat.exists and old_file.stat.checksum != new_file.stat.checksum)

- name: Make sure text-collector directory exists.
  file:
    path: "{{ volume_mount }}/prometheus_node_exporter/textfile_collector"
    state: directory

- name: Start the Prometheus node exporter service.
  service:
    name: prometheus_node_exporter
    state: started
    enabled: yes
