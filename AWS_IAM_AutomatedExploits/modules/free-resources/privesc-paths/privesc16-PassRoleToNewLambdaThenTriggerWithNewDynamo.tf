resource "aws_iam_policy" "db-users" {
  name        = "db-users"
  path        = "/"
#  description = "Allows user to create db and function to start privesc16"

  # Terraform's "jsonencode" function converts a
  # Terraform expression result to valid JSON syntax.
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
	      "lambda:CreateFunction",
 			  "iam:PassRole",
			  "lambda:CreateEventSourceMapping",
        "dynamodb:CreateTable"
        ]
        Effect   = "Allow"
        Resource = "*"
      },
    ]
  })
}


resource "aws_iam_policy" "lambda-dev" {
  name        = "lambda-dev"
  path        = "/"
#  description = "Allows privesc via lambda:createfunction, CreateEventSourceMapping and iam:passrole"
  policy = jsonencode({
  "Version": "2012-10-17",
  "Statement": [
    {
       "Sid": "",
       "Effect": "Allow",
       "Action": [
       "dynamodb:GetShardIterator",
       "iam:AttachUserPolicy",
       "dynamodb:DescribeStream",
       "dynamodb:GetRecords"
       ],
       "Resource": [
         "arn:aws:dynamodb:*:*:table/*/stream/*",
         "arn:aws:iam::*:user/*"
       ]
     },
     {
      "Sid": "",
            "Effect": "Allow",
            "Action": "dynamodb:ListStreams",
            "Resource": "*"
     },
    ]
  })
}


resource "aws_iam_role" "db-users-role" {
  name                = "db-users-role"
  assume_role_policy  = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = ""
        Principal = {
          AWS = var.aws_assume_role_arn
        }
      },
    ]
  })
}

resource "aws_iam_role" "lambda-dev-role" {
  name                = "lambda-dev-role"
  assume_role_policy  = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = ""
        Principal = { "Service": "lambda.amazonaws.com"
        }
      },
    ]
  })
}

resource "aws_iam_user" "Parabola" {
  name = "Parabola"
  path = "/"

  tags = {
  firstname = "Laurencia"
  lastname = "Dorthy"
  company = "Laurencia.Dorthy@bcrindustries.com"
  }
}

resource "aws_iam_access_key" "Parabola" {
  user = aws_iam_user.Parabola.name
}


resource "aws_iam_user_policy_attachment" "Parabola-attach-policy" {
  user       = aws_iam_user.Parabola.name
  policy_arn = aws_iam_policy.db-users.arn
}

resource "aws_iam_role_policy_attachment" "db-users-role-attach-policy" {
  role       = aws_iam_role.db-users-role.name
  policy_arn = aws_iam_policy.db-users.arn
}

resource "aws_iam_role_policy_attachment" "lambda-dev-role-attach-policy" {
  role       = aws_iam_role.lambda-dev-role.name
  policy_arn = aws_iam_policy.lambda-dev.arn
}